[{"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\reducers\\index.js":"1","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\containers\\App.js":"2","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\components\\teacher.js":"3","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\components\\student.js":"4","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\index.js":"5","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\index.js":"6","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\action\\index.js":"7"},{"size":2265,"mtime":1609853019289,"results":"8","hashOfConfig":"9"},{"size":1307,"mtime":1609853582752,"results":"10","hashOfConfig":"9"},{"size":628,"mtime":1609853111629,"results":"11","hashOfConfig":"9"},{"size":626,"mtime":1609853106704,"results":"12","hashOfConfig":"9"},{"size":846,"mtime":1609852187032,"results":"13","hashOfConfig":"9"},{"size":868,"mtime":1609851750864,"results":"14","hashOfConfig":"9"},{"size":878,"mtime":1609853771066,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1shl18w",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\reducers\\index.js",[],"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\containers\\App.js",["31"],"/*\r\n * @Author: your name\r\n * @Date: 2021-01-04 17:25:48\r\n * @LastEditTime: 2021-01-05 21:33:01\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\learn\\react-learn\\src\\reduxAsync\\containers\\App.js\r\n */\r\nimport { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Student from '../components/student'\r\nimport Teacher from '../components/teacher'\r\nimport {show,fetchPosts} from '../action/index'\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        const { dispatch, selectedSubreddit } = this.props\r\n        console.log(this.props, 11);\r\n        dispatch(fetchPosts())\r\n\r\n    }\r\n    change = () => {\r\n        this.props.dispatch(show('B'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 onClick={this.change}>切换</h1>\r\n                {\r\n                    this.props.show === 'A' ? <Student info={this.props.info}></Student> : <Teacher info={this.props.info}></Teacher>\r\n                }\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    const { show, teacher, student } = state;\r\n\r\n    if (show === 'A') {\r\n        return { show, info: student }\r\n    }\r\n\r\n    return { show, info: teacher }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App)","C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\components\\teacher.js",[],"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\components\\student.js",[],"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\index.js",[],"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\index.js",["32","33"],"C:\\Users\\DaFu\\Desktop\\work\\learn\\react-learn\\src\\reduxAsync\\action\\index.js",[],{"ruleId":"34","severity":1,"message":"35","line":17,"column":27,"nodeType":"36","messageId":"37","endLine":17,"endColumn":44},{"ruleId":"34","severity":1,"message":"38","line":14,"column":10,"nodeType":"36","messageId":"37","endLine":14,"endColumn":22},{"ruleId":"34","severity":1,"message":"39","line":15,"column":8,"nodeType":"36","messageId":"37","endLine":15,"endColumn":15},"no-unused-vars","'selectedSubreddit' is assigned a value but never used.","Identifier","unusedVar","'createLogger' is defined but never used.","'reducer' is defined but never used."]