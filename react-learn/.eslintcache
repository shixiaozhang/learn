[{"D:\\learn\\learn\\react-learn\\src\\App.js":"1","D:\\learn\\learn\\react-learn\\src\\reportWebVitals.js":"2","D:\\learn\\learn\\react-learn\\src\\login.js":"3","D:\\learn\\learn\\react-learn\\src\\index.js":"4","D:\\learn\\learn\\react-learn\\src\\Login.js":"5","D:\\learn\\learn\\react-learn\\src\\Routers.js":"6","D:\\learn\\learn\\react-learn\\src\\routers\\A.js":"7","D:\\learn\\learn\\react-learn\\src\\routers\\C.js":"8","D:\\learn\\learn\\react-learn\\src\\routers\\B.js":"9","D:\\learn\\learn\\react-learn\\src\\context.js":"10","D:\\learn\\learn\\react-learn\\src\\refs.js":"11","D:\\learn\\learn\\react-learn\\src\\render.js":"12","D:\\learn\\learn\\react-learn\\src\\reactApi.js":"13","D:\\learn\\learn\\react-learn\\src\\Hook.js":"14"},{"size":8715,"mtime":1608617686724,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607926586128,"results":"17","hashOfConfig":"16"},{"size":73,"mtime":1608112591495,"results":"18","hashOfConfig":"16"},{"size":811,"mtime":1608801878963,"results":"19","hashOfConfig":"16"},{"size":118,"mtime":1608608687835,"results":"20","hashOfConfig":"16"},{"size":2312,"mtime":1608607456432,"results":"21","hashOfConfig":"16"},{"size":81,"mtime":1608177125583,"results":"22","hashOfConfig":"16"},{"size":81,"mtime":1608177149257,"results":"23","hashOfConfig":"16"},{"size":81,"mtime":1608177160677,"results":"24","hashOfConfig":"16"},{"size":3229,"mtime":1608622901817,"results":"25","hashOfConfig":"16"},{"size":402,"mtime":1608627294339,"results":"26","hashOfConfig":"16"},{"size":2067,"mtime":1608711846447,"results":"27","hashOfConfig":"16"},{"size":3293,"mtime":1608794756517,"results":"28","hashOfConfig":"16"},{"size":570,"mtime":1608801845209,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1ag4uxw",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\learn\\learn\\react-learn\\src\\App.js",["59","60","61"],"D:\\learn\\learn\\react-learn\\src\\reportWebVitals.js",[],"D:\\learn\\learn\\react-learn\\src\\login.js",[],"D:\\learn\\learn\\react-learn\\src\\index.js",[],"D:\\learn\\learn\\react-learn\\src\\Login.js",[],"D:\\learn\\learn\\react-learn\\src\\Routers.js",["62","63","64","65","66"],"D:\\learn\\learn\\react-learn\\src\\routers\\A.js",[],"D:\\learn\\learn\\react-learn\\src\\routers\\C.js",[],"D:\\learn\\learn\\react-learn\\src\\routers\\B.js",[],"D:\\learn\\learn\\react-learn\\src\\context.js",[],"D:\\learn\\learn\\react-learn\\src\\refs.js",[],"D:\\learn\\learn\\react-learn\\src\\render.js",[],"D:\\learn\\learn\\react-learn\\src\\reactApi.js",["67"],"/*\r\n *@浅层比较的组件；PureComponent 和 React.memo\r\n * @Author: \r\n * @Date: 2020-12-24 10:33:45\r\n * @LastEditTime: 2020-12-24 15:25:54\r\n * @LastEditors: Please set LastEditors\r\n * @Description: In User Settings Edit\r\n * @FilePath: \\learn\\react-learn\\src\\reactApi.js\r\n */\r\nimport React from 'react'\r\n\r\nclass Api extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            names: {\r\n                id: 0\r\n            }\r\n        }\r\n        this.ref = React.createRef()\r\n    }\r\n    changeId = () => {\r\n        let names = this.state.names\r\n        let id = names.id + 1\r\n        names = Object.assign(names, { id: id })\r\n        console.log(names);\r\n        this.setState({\r\n            names: names\r\n        })\r\n        console.log(this.state.names.id);\r\n\r\n    }\r\n    upDate = () => {\r\n        console.log(this.ref);\r\n        // this.ref.forceUpdate((props) => {\r\n        //     console.log(props);\r\n\r\n        // })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <button onClick={this.changeId}>+1</button><br />\r\n                <button onClick={this.upDate}>强制刷新</button>\r\n                <Apimemo ref={this.ref} name={this.state.names}></Apimemo>\r\n                <ApiPure ></ApiPure>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nclass ApiPure extends React.PureComponent {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            info: {\r\n                name: 'qqq',\r\n                other: {\r\n                    child: 0\r\n                }\r\n            }\r\n        }\r\n    }\r\n    upDate = () => {\r\n        this.forceUpdate((props) => {\r\n            console.log(props);\r\n\r\n        })\r\n    }\r\n    clickBut = () => {\r\n        let info = this.state.info\r\n        let child = info.other.child + 1;\r\n        info = Object.assign(info, { other: { child: child } })\r\n        this.setState({\r\n            info: info\r\n        })\r\n        console.log(this.state.info);\r\n    }\r\n    render() {\r\n        // child在变化但是，因为表层数据没改变，所以dom不刷新\r\n        return (\r\n            <>\r\n                <h1>我是pure组件</h1>\r\n                <h1>info:name:{this.state.info.name}</h1>\r\n                <h1>other:{this.state.info.other.child}</h1>\r\n                <button onClick={this.clickBut}>+1</button>\r\n                <br />\r\n                <button onClick={this.upDate}>强制刷新</button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Mymemo(props) {\r\n    console.log(props);\r\n    // id在变化但是，因为表层数据没改变，所以dom不刷新\r\n    // 浅层比较\r\n    return (\r\n        <>\r\n            <h1 ref={props.ref}>我是Apimemo组件</h1>\r\n            <h1>{props.name.id}</h1>\r\n\r\n        </>\r\n    )\r\n}\r\n// function areEqual(prevProps, nextProps) {\r\n//     /*\r\n//     如果把 nextProps 传入 render 方法的返回结果与\r\n//     将 prevProps 传入 render 方法的返回结果一致则返回 true，\r\n//     否则返回 false\r\n//     */\r\n// }\r\n\r\n\r\nconst Fors = React.forwardRef((props, ref) => {\r\n    console.log(props);\r\n    return (\r\n        <>\r\n            <h1 ref={ref}>我是Apimemo组件</h1>\r\n            <h1>{props.name.id}</h1>\r\n\r\n        </>\r\n    )\r\n})\r\n\r\nconst Apimemo = React.memo(Fors)\r\n\r\nexport default Api","D:\\learn\\learn\\react-learn\\src\\Hook.js",[],{"ruleId":"68","severity":1,"message":"69","line":4,"column":10,"nodeType":"70","messageId":"71","endLine":4,"endColumn":23},{"ruleId":"68","severity":1,"message":"72","line":4,"column":25,"nodeType":"70","messageId":"71","endLine":4,"endColumn":29},{"ruleId":"68","severity":1,"message":"73","line":4,"column":31,"nodeType":"70","messageId":"71","endLine":4,"endColumn":36},{"ruleId":"68","severity":1,"message":"74","line":3,"column":17,"nodeType":"70","messageId":"71","endLine":3,"endColumn":26},{"ruleId":"68","severity":1,"message":"75","line":4,"column":61,"nodeType":"70","messageId":"71","endLine":4,"endColumn":71},{"ruleId":"68","severity":1,"message":"76","line":13,"column":7,"nodeType":"70","messageId":"71","endLine":13,"endColumn":12},{"ruleId":"77","severity":1,"message":"78","line":76,"column":17,"nodeType":"79","messageId":"80","endLine":76,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":78,"column":24,"nodeType":"79","messageId":"80","endLine":78,"endColumn":26},{"ruleId":"68","severity":1,"message":"81","line":95,"column":10,"nodeType":"70","messageId":"71","endLine":95,"endColumn":16},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Route' is defined but never used.","'Component' is defined but never used.","'HashRouter' is defined but never used.","'Login' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Mymemo' is defined but never used."]